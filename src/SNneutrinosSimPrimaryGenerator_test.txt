#include "SNneutrinosSimPrimaryGenerator.hh"
#include "g4root.hh"

#include "G4ParticleTable.hh"
#include "G4ParticleTypes.hh"
#include "G4ParticleDefinition.hh"
#include "G4SystemOfUnits.hh"
#include "Randomize.hh"
#include "G4RunManager.hh"

SNneutrinosSimPrimaryGenerator::SNneutrinosSimPrimaryGenerator()
{
    fParticleGun = new G4ParticleGun(1);

    // G4ParticleTable *particleTable = G4ParticleTable::GetParticleTable();
    // G4ParticleDefinition *particle = particleTable->FindParticle("chargedgeantino");

    // G4ThreeVector pos(0.,0.,-20.*km);
    // G4ThreeVector mom(0.,0.,1.);

    // fParticleGun->SetParticlePosition(pos);
    // fParticleGun->SetParticleMomentumDirection(mom);
    // fParticleGun->SetParticleMomentum(100.*GeV);
    // fParticleGun->SetParticleDefinition(particle);
}

SNneutrinosSimPrimaryGenerator::~SNneutrinosSimPrimaryGenerator()
{
    delete fParticleGun;
}

void SNneutrinosSimPrimaryGenerator::GeneratePrimaries(G4Event *anEvent)
{
// set positrons as primary particle
    G4ParticleTable *particleTable = G4ParticleTable::GetParticleTable();
    fParticleGun->SetParticleDefinition(particleTable->FindParticle("opticalphoton")); //opticalphoton

    G4ThreeVector position(0., 400*cm, 0.);
    G4ThreeVector momentum(1.,1.,1.);

    fParticleGun->SetParticlePosition(position);
    fParticleGun->SetParticleMomentumDirection(momentum);
    fParticleGun->SetParticleMomentum(2*eV);
  



    fParticleGun->GeneratePrimaryVertex(anEvent);
}